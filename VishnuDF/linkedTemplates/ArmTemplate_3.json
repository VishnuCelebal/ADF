{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "VishnuDF"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ef6d972f-d830-4806-b674-9c03c608c9e6/resourceGroups/VishnutestingRG/providers/Microsoft.Storage/storageAccounts/vishnustorage"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SAPMDX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapBwSource",
								"query": "SELECT {[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]} ON COLUMNS , NON EMPTY CROSSJOIN(CROSSJOIN(CROSSJOIN(CROSSJOIN([2CISOFSLSORD-CREATIONDATE].[LEVEL01].MEMBERS,[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].MEMBERS) ,[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].MEMBERS) ,[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].MEMBERS) ,[2CIFICURRENCY].[LEVEL01].MEMBERS)  ON ROWS FROM [$2CISOFSLSORD] "
							},
							"sink": {
								"type": "SqlServerSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "[[2CISOFSLSORD-CREATIONDATE].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "cdate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CIFICURRENCY].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]",
											"type": "Decimal"
										},
										"sink": {
											"name": "c5",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SapBwCube2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "cubedata",
									"SchemaName": "dbo"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-02T12:09:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBEP Delta Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select max(ERDAT) as Entrydate from VBAP",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAP",
									"SchemaName": "dbo"
								}
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "ERDAT GT '@{activity('Lookup1').output.firstRow.entrydate}' or AEDAT GT '@{activity('Lookup1').output.firstRow.entrydate}' ",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table vbapstg",
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAPSTG",
									"SchemaName": "dbo"
								}
							}
						]
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\n   STUFF((SELECT ',' + ''''+US.VBELN+''''\n          FROM vbapstg US\n          FOR XML PATH('')), 1, 1, '') VBID,STUFF((SELECT ',' + ''''+US.POSNR+''''\n          FROM vbapstg US\n          FOR XML PATH('')), 1, 1, '') POID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAPSTG",
									"SchemaName": "DBO"
								}
							}
						}
					},
					{
						"name": "Copy data3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "VBELN IN (@{activity('Lookup2').output.firstRow.VBID}) and POSNR IN (@{activity('Lookup2').output.firstRow.POID}) ",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBEP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBEPSTG",
									"SchemaName": "dbo"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-03-30T11:56:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/deltaOnMDX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": " select format(max(createdate),'yyyyMMdd') as date from (\nselect \ncase when SUBSTRING(cdate,1,2)<=12 then convert(date,concat(DAY(cdate),'-',month(cdate),'-',YEAR(cdate)))\nwhen SUBSTRING(cdate,1,2)>12 then convert(date,concat(substring(cdate,7,4),substring(cdate,4,2),substring(cdate,1,2)))\nend as createdate\nfrom cubedata)z",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "cubedata",
									"SchemaName": "dbo"
								}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapBwSource",
								"query": {
									"value": "SELECT {[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]} ON COLUMNS ,\n NON EMPTY CROSSJOIN(CROSSJOIN(CROSSJOIN(CROSSJOIN([2CISOFSLSORD-CREATIONDATE].[LEVEL01].MEMBERS,[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].MEMBERS) \n,[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].MEMBERS) ,[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].MEMBERS) ,[2CIFICURRENCY].[LEVEL01].MEMBERS)  ON ROWS FROM \n   (SELECT\n    FROM [$2CISOFSLSORD]\n   where {[2CISOFSLSORD-CREATIONDATE].[@{activity('Lookup1').output.firstRow.date}]:[2CISOFSLSORD-CREATIONDATE].[00000000]})",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table cubedatastg"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "[[2CISOFSLSORD-CREATIONDATE].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "cdate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CIFICURRENCY].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]",
											"type": "Decimal"
										},
										"sink": {
											"name": "c5",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SapBwCube1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "cubedatastg",
									"SchemaName": "dbo"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-09T05:37:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT max(BLDAT) as date from bkpf",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "bkpf"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "BLDAT GT '@{item().date}'",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "",
											"rfcTableFields": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "truncate table bkpfstg",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "HSSTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "BKPF"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "dbo",
												"Table": "bkpfstg"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "BLDAT LT '20190325'",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table bkpf",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "BKPF"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "BKPF"
								}
							}
						]
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_Upsert]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-10-27T09:03:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select top 10 * from statusData where status='N'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureCelebalNew",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "statusData ",
									"SchemaName": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1_copy3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "update statusData set status='S' where tablename='@{item().tablename}'\n\nselect 0;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureCelebalNew",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "statusData",
												"SchemaName": "dbo"
											}
										}
									}
								},
								{
									"name": "Copy data1_copy3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AzureCelebalNew",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": "SAP_S4_IDES"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": "SAPIDES"
											}
										}
									]
								},
								{
									"name": "Lookup3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1_copy3",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "update statusData set status='E' where tablename='@{item().tablename}'\n\nselect 0;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureCelebalNew",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "StatusData",
												"SchemaName": "dbo"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-20T04:37:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select  * from statusData where status='N'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureCelebalNew",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "statusData ",
									"SchemaName": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "drop table SAPIDES.@{item().tablename}\n\nselect 0;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "PersonPhone",
												"SchemaName": "Person"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-17T13:12:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgdelta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "VBELN IN (@{activity('Lookup1').output.firstRow.IDS})",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table vbapstg",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vbapstg"
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n   STUFF((SELECT ',' + ''''+US.VBELN+''''\n          FROM vbakstg US\n          FOR XML PATH('')), 1, 1, '') IDS",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vbakstg"
								}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-27T09:03:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline4",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/testtrigger/blobs/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		}
	]
}