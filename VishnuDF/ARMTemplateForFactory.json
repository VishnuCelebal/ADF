{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "VishnuDF"
		},
		"Anubhav_SqlServerLocal_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Anubhav_SqlServerLocal'"
		},
		"Anubhav_SqlServerLocal_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Anubhav_SqlServerLocal'"
		},
		"Azure Calabal Database_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Azure Calabal Database'"
		},
		"Azure Celebal Old_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Azure Celebal Old'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage3'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"Cognitus_S4HANA_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Cognitus_S4HANA'"
		},
		"HSSSapTableCon_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HSSSapTableCon'"
		},
		"LocalFile_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LocalFile'"
		},
		"LocalsqlVishnu_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LocalsqlVishnu'"
		},
		"LocalsqlVishnu_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LocalsqlVishnu'"
		},
		"OData1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OData1'"
		},
		"RestService1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService1'"
		},
		"SAPECC_Local_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SAPECC_Local'"
		},
		"SapBw1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapBw1'"
		},
		"SapEcc1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapEcc1'"
		},
		"SapOpenHub_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapOpenHub'"
		},
		"SapTable1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapTable1'"
		},
		"SapTable2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapTable2'"
		},
		"SapTable3_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapTable3'"
		},
		"Anubhav_SqlServerLocal_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "CBLLAP0086\\Admin"
		},
		"Cognitus_S4HANA_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "201"
		},
		"Cognitus_S4HANA_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Angupta"
		},
		"Cognitus_S4HANA_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "hss.cognitusconsulting.com"
		},
		"Cognitus_S4HANA_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"HSSSapTableCon_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "201"
		},
		"HSSSapTableCon_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "angupta"
		},
		"HSSSapTableCon_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "hss.cognitusconsulting.com"
		},
		"HSSSapTableCon_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"LocalFile_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "D:\\SAP\\SAP Tables Data\\New SAP Tables\\"
		},
		"LocalFile_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "admin"
		},
		"LocalsqlVishnu_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		},
		"OData1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://hss.cognitusconsulting.com:8000/sap/opu/odata/sap/ZGW_SAP_SQL_METADATA_SRV/DETSet?&$filter=Querytab eq 'SCARR'&$format=json"
		},
		"OData1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "angupta"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://hss.cognitusconsulting.com:8000/sap/opu/odata/sap/ZGW_SAP_SQL_METADATA_SRV/DETSet?&$filter=Querytab eq 'VBAK'&$format=json"
		},
		"RestService1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "angupta"
		},
		"SAPECC_Local_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "800"
		},
		"SAPECC_Local_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "nsn20"
		},
		"SAPECC_Local_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "103.69.245.20"
		},
		"SAPECC_Local_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "10"
		},
		"SapBw1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "hss.cognitusconsulting.com"
		},
		"SapBw1_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SapBw1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "201"
		},
		"SapBw1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "angupta"
		},
		"SapEcc1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://hss.cognitusconsulting.com:8000/sap/opu/odata/sap/ZGW_SAP_SQL_METADATA_SRV/DETSet?&$filter=Querytab%20eq%20%27VBAP%27&"
		},
		"SapEcc1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "angupta"
		},
		"SapOpenHub_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "201"
		},
		"SapOpenHub_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "angupta"
		},
		"SapOpenHub_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "hss.cognitusconsulting.com"
		},
		"SapOpenHub_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SapTable1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "302"
		},
		"SapTable1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "FI_CONS"
		},
		"SapTable1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "10.2.18.12"
		},
		"SapTable1_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SapTable2_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "201"
		},
		"SapTable2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Angupta"
		},
		"SapTable2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "hss.cognitusconsulting.com"
		},
		"SapTable2_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SapTable3_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"SapTable3_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "rlamba"
		},
		"SapTable3_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "52.200.210.142"
		},
		"SapTable3_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "01"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ef6d972f-d830-4806-b674-9c03c608c9e6/resourceGroups/VishnutestingRG/providers/Microsoft.Storage/storageAccounts/vishnustorage"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Create_Structure_Of_Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from TableMetadata where status='N'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "TableMetadata ",
									"SchemaName": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup2').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT TOP 0 *\nINTO [SAP_S4_IDES].@{item().tablename}\nFROM [SAP_S4].@{item().tablename}\n\nselect 0;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureCelebalNew",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@{item().tablename}",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@{item().schemaname}",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Lookup3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "update TableMetadata set  status='Y' where TableName='@{item().tablename}'\n\nselect 0;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().schemaname",
													"type": "Expression"
												}
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-14T13:48:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureCelebalNew')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeltaLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from Person.PersonPhone where modifiedDate> all(select MAX(modifiedDate) from Person.PersonPhoneFull)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "PersonPhoneFull",
									"SchemaName": "Person"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "PersonPhoneSTG",
									"SchemaName": "Person"
								}
							}
						]
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_Upsert]"
						},
						"linkedServiceName": {
							"referenceName": "LocalsqlVishnu",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-03-31T13:40:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/LocalsqlVishnu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeltaOfSAPView')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select MAX(ERDAT) as createdate from WB2_V_VBAK_VBAP2",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "WB2_V_VBAK_VBAP2",
									"SchemaName": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "ERDAT GT '@{item().createdate}' or AEDAT GT  '@{item().createdate}'",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"preCopyScript": "truncate table WB2_V_VBAK_VBAP2_STG",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "HSSTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "WB2_V_VBAK_VBAP2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "WB2_V_VBAK_VBAP2_STG",
												"SchemaName": "dbo"
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-03-30T10:34:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/HSSTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamic Delta Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from TableMetadata where deltacolumn='Y'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "TableMetadata",
									"SchemaName": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Max Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "ERDAT GT '@{activity('Get Max Date').output.firstRow.CreatedDate}' or AEDAT GT '@{activity('Get Max Date').output.firstRow.CreatedDate}' ",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "HSSTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@{item().tablename}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@{item().stgtable}",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@{item().schemaname}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Get Max Date",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select MAX(ERDAT) as CreatedDate,MAX(AEDAT) as Updatedate from @{item().tablename}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@{item().tablename}",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@{item().schemaname}",
													"type": "Expression"
												}
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Vishnu Dynamic"
				},
				"annotations": [],
				"lastPublishTime": "2020-04-17T13:12:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/HSSTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamic Initial Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from TableMetadata where status='N'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "TableMetadata",
									"SchemaName": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Initial Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rowCount": 100,
											"rfcTableOptions": "",
											"customRfcReadTableFunctionModule": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "HSSTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().schemaname",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Initial Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "update TableMetadata set status='Y' where TableName='@{item().tablename}';\n\nselect 0 id;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().schemaname",
													"type": "Expression"
												}
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Vishnu Dynamic"
				},
				"annotations": [],
				"lastPublishTime": "2020-03-28T12:24:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/HSSTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EccToSql_Bseg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "bseg"
								}
							}
						]
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "PersonPhone",
									"SchemaName": "Person"
								}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "PersonPhone",
									"SchemaName": "Person"
								}
							},
							"timeout": "7.00:00:00",
							"sleep": 10
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-15T12:40:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HSS System')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(ERDAT) as Entrydate,max(AUDAT) as updatedate from vbakhss",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vbakhss"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "AUDAT GT '@{item().updatedate}' or ERDAT GT '@{item().Entrydate}' ",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "truncate table vbakstg",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "HSSTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "VBAK"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "dbo",
												"Table": "VBAKstg"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "VBELN IN (@{activity('Lookup1_copy1').output.firstRow.IDS})",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table vbapstg",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vbapstg"
								}
							}
						]
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n   STUFF((SELECT ',' + ''''+US.VBELN+''''\n          FROM vbakstg US\n          FOR XML PATH('')), 1, 1, '') IDS",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vbakstg"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Vishnu Dynamic"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-27T09:03:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/HSSTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IdentifyDeleteRows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\n   STUFF((SELECT ',' + ''''+US.VBELN+''''\n          FROM VBAK US\n          FOR XML PATH('')), 1, 1, '') IDS",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAK",
									"SchemaName": "dbo"
								}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "getID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "VBELN IN (@{activity('getID').output.firstRow.IDS})",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "VBELN",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAK"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAKDelete",
									"SchemaName": "dbo"
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "delete from vbak where VBELN in (select a.VBELN from vbak a left join \nvbakdelete b on a.VBELN=b.VBELN where b.VBELN is null);\n\nselect 0 id;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "vbak",
									"SchemaName": "dbo"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Vishnu Dynamic"
				},
				"annotations": [],
				"lastPublishTime": "2020-03-30T10:34:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/HSSTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadFileIntoDatabase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from TableMetadata where status='N'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "TableMetadata ",
									"SchemaName": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DelimitedText2",
											"type": "DatasetReference",
											"parameters": {
												"FilaName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"Folder": "FI"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().schemaname",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Lookup3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "update TableMetadata set  status='PS' where TableName='@{item().tablename}'\n\nselect 0;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().schemaname",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Lookup4",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "update TableMetadata set  status='PE' where TableName='@{item().tablename}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().schemaname",
													"type": "Expression"
												}
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-15T09:25:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/New_Test_PL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_Data_Test123",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT max(BLDAT) as date from bkpf",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "bkpf"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "BLDAT GT '@{item().date}'",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "",
											"rfcTableFields": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "truncate table bkpfstg",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "HSSTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "BKPF"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "dbo",
												"Table": "bkpfstg"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy_Data_Test123",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "BLDAT LT '20190325'",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table bkpf",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "BKPF"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "BKPF"
								}
							}
						]
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_Upsert]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-10-27T09:03:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/HSSTable')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pause_Resume_Scale_UpDowm_DWH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web_Logicapp_ScaleUpDown",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web_DWH_Scale_UpDown",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-15.eastus.logic.azure.com:443/workflows/408ef94b006545e6b0f093c4d40022a1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=rZOKW6OzcgmEYWxrpTBsrYzSRrFGixmQMahLTmVsZnY",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"location": "East US"
							}
						}
					},
					{
						"name": "Web_DWH_Scale_UpDown",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web_DWH_PauseResume",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/ef6d972f-d830-4806-b674-9c03c608c9e6/resourceGroups/VishnutestingRG/providers/Microsoft.Sql/servers/vishnusqlserver/databases/VishnuSynapse?api-version=2014-04-01-preview",
							"method": "PATCH",
							"headers": {},
							"body": {
								"properties": {
									"requestedServiceObjectiveName": "DW100c"
								}
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "Web_DWH_PauseResume",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/ef6d972f-d830-4806-b674-9c03c608c9e6/resourceGroups/VishnutestingRG/providers/Microsoft.Sql/servers/vishnusqlserver/databases/VishnuSynapse/pause?api-version=2014-04-01-preview",
							"method": "POST",
							"headers": {},
							"body": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-17T07:25:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Schedule_synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/ef6d972f-d830-4806-b674-9c03c608c9e6/resourceGroups/VishnutestingRG/providers/Microsoft.Sql/servers/vishnutesting/databases/SAP_Testing/resume?api-version=2014-04-01-preview",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"Dummy": "Dummy"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-27T09:03:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Zip_MultipleFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_Zip_MultipleFile",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*_*.txt",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_gt0",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_gt0",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-21T11:32:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_gt0')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_gt0')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPECC System')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rowCount": 100,
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SAPECCTables",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAK"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "VBAK"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-03-26T05:59:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SAPECCTables')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPMDX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapBwSource",
								"query": "SELECT {[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]} ON COLUMNS , NON EMPTY CROSSJOIN(CROSSJOIN(CROSSJOIN(CROSSJOIN([2CISOFSLSORD-CREATIONDATE].[LEVEL01].MEMBERS,[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].MEMBERS) ,[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].MEMBERS) ,[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].MEMBERS) ,[2CIFICURRENCY].[LEVEL01].MEMBERS)  ON ROWS FROM [$2CISOFSLSORD] "
							},
							"sink": {
								"type": "SqlServerSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "[[2CISOFSLSORD-CREATIONDATE].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "cdate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CIFICURRENCY].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]",
											"type": "Decimal"
										},
										"sink": {
											"name": "c5",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SapBwCube2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "cubedata",
									"SchemaName": "dbo"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-02T12:09:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SapBwCube2')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBEP Delta Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select max(ERDAT) as Entrydate from VBAP",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAP",
									"SchemaName": "dbo"
								}
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "ERDAT GT '@{activity('Lookup1').output.firstRow.entrydate}' or AEDAT GT '@{activity('Lookup1').output.firstRow.entrydate}' ",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table vbapstg",
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAPSTG",
									"SchemaName": "dbo"
								}
							}
						]
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\n   STUFF((SELECT ',' + ''''+US.VBELN+''''\n          FROM vbapstg US\n          FOR XML PATH('')), 1, 1, '') VBID,STUFF((SELECT ',' + ''''+US.POSNR+''''\n          FROM vbapstg US\n          FOR XML PATH('')), 1, 1, '') POID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAPSTG",
									"SchemaName": "DBO"
								}
							}
						}
					},
					{
						"name": "Copy data3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "VBELN IN (@{activity('Lookup2').output.firstRow.VBID}) and POSNR IN (@{activity('Lookup2').output.firstRow.POID}) ",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBEP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBEPSTG",
									"SchemaName": "dbo"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-03-30T11:56:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/HSSTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deltaOnMDX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": " select format(max(createdate),'yyyyMMdd') as date from (\nselect \ncase when SUBSTRING(cdate,1,2)<=12 then convert(date,concat(DAY(cdate),'-',month(cdate),'-',YEAR(cdate)))\nwhen SUBSTRING(cdate,1,2)>12 then convert(date,concat(substring(cdate,7,4),substring(cdate,4,2),substring(cdate,1,2)))\nend as createdate\nfrom cubedata)z",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "cubedata",
									"SchemaName": "dbo"
								}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapBwSource",
								"query": {
									"value": "SELECT {[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]} ON COLUMNS ,\n NON EMPTY CROSSJOIN(CROSSJOIN(CROSSJOIN(CROSSJOIN([2CISOFSLSORD-CREATIONDATE].[LEVEL01].MEMBERS,[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].MEMBERS) \n,[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].MEMBERS) ,[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].MEMBERS) ,[2CIFICURRENCY].[LEVEL01].MEMBERS)  ON ROWS FROM \n   (SELECT\n    FROM [$2CISOFSLSORD]\n   where {[2CISOFSLSORD-CREATIONDATE].[@{activity('Lookup1').output.firstRow.date}]:[2CISOFSLSORD-CREATIONDATE].[00000000]})",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table cubedatastg"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "[[2CISOFSLSORD-CREATIONDATE].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "cdate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[2CIFICURRENCY].[LEVEL01].[MEMBER_CAPTION]",
											"type": "String"
										},
										"sink": {
											"name": "c4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "[[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]",
											"type": "Decimal"
										},
										"sink": {
											"name": "c5",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SapBwCube1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "cubedatastg",
									"SchemaName": "dbo"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-09T05:37:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/SapBwCube1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT max(BLDAT) as date from bkpf",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "bkpf"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "BLDAT GT '@{item().date}'",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "",
											"rfcTableFields": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "truncate table bkpfstg",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "HSSTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "BKPF"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "dbo",
												"Table": "bkpfstg"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "BLDAT LT '20190325'",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table bkpf",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "BKPF"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "BKPF"
								}
							}
						]
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_Upsert]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-10-27T09:03:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/HSSTable')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select top 10 * from statusData where status='N'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureCelebalNew",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "statusData ",
									"SchemaName": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1_copy3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "update statusData set status='S' where tablename='@{item().tablename}'\n\nselect 0;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureCelebalNew",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "statusData",
												"SchemaName": "dbo"
											}
										}
									}
								},
								{
									"name": "Copy data1_copy3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AzureCelebalNew",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": "SAP_S4_IDES"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().tablename",
													"type": "Expression"
												},
												"SchemaName": "SAPIDES"
											}
										}
									]
								},
								{
									"name": "Lookup3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1_copy3",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "update statusData set status='E' where tablename='@{item().tablename}'\n\nselect 0;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureCelebalNew",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "StatusData",
												"SchemaName": "dbo"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-20T04:37:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureCelebalNew')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select  * from statusData where status='N'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureCelebalNew",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "statusData ",
									"SchemaName": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "drop table SAPIDES.@{item().tablename}\n\nselect 0;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "PersonPhone",
												"SchemaName": "Person"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-17T13:12:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureCelebalNew')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedText4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-27T09:03:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgdelta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "VBELN IN (@{activity('Lookup1').output.firstRow.IDS})",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table vbapstg",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSSTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "VBAP"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vbapstg"
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n   STUFF((SELECT ',' + ''''+US.VBELN+''''\n          FROM vbakstg US\n          FOR XML PATH('')), 1, 1, '') IDS",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vbakstg"
								}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-27T09:03:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HSSTable')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureCelebalNew')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure Calabal Database",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure Calabal Database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureCelebalOld')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure Celebal Old",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure Celebal Old')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"Table": {
						"type": "string",
						"defaultValue": "test"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BKPF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapTable1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SapTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BSEG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapTable1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "BSEG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SapTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDHDR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Cognitus_S4HANA",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "CDHDR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Cognitus_S4HANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDPOS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Cognitus_S4HANA",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "CDPOS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Cognitus_S4HANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalFile",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilaName": {
						"type": "string",
						"defaultValue": "FileName"
					},
					"Folder": {
						"type": "string",
						"defaultValue": "Folder"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().FilaName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						}
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KNA1.csv",
						"container": "testing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KNA1.csv",
						"container": "testing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "mtcdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_gt0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Zipfile.zip",
						"folderPath": "Data",
						"container": "sap"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HSSTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HSSSapTableCon",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HSSSapTableCon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lookuptable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Anubhav_SqlServerLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Anubhav_SqlServerLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPECCTables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapTable1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SapTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_CDPOS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Anubhav_SqlServerLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "Dbo",
					"table": "CDPOS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Anubhav_SqlServerLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapBwCube1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapBw1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapBwCube",
				"schema": [],
				"typeProperties": {},
				"typePropertites": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SapBw1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapBwCube2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapBw1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapBwCube",
				"schema": [],
				"typeProperties": {},
				"typePropertites": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SapBw1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_gt0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sap"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalsqlVishnu",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "PersonPhone"
					},
					"SchemaName": {
						"type": "string",
						"defaultValue": "Person"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalsqlVishnu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sql_Cdhdr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Anubhav_SqlServerLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "Dbo",
					"table": "CDHDR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Anubhav_SqlServerLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Anubhav_SqlServerLocal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Anubhav_SqlServerLocal_connectionString')]",
					"userName": "[parameters('Anubhav_SqlServerLocal_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Anubhav_SqlServerLocal_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AnubhavIntegrationRunTime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AnubhavIntegrationRunTime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure Calabal Database')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Azure Calabal Database_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure Celebal Old')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Azure Celebal Old_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cognitus_S4HANA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('Cognitus_S4HANA_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('Cognitus_S4HANA_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Cognitus_S4HANA_password')]"
					},
					"server": "[parameters('Cognitus_S4HANA_properties_typeProperties_server')]",
					"systemNumber": "[parameters('Cognitus_S4HANA_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SlefHostIRVishnu",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SlefHostIRVishnu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HSSSapTableCon')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('HSSSapTableCon_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('HSSSapTableCon_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HSSSapTableCon_password')]"
					},
					"server": "[parameters('HSSSapTableCon_properties_typeProperties_server')]",
					"systemNumber": "[parameters('HSSSapTableCon_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "IntegrationFroSqlVISHNU",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationFroSqlVISHNU')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalFile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LocalFile_properties_typeProperties_host')]",
					"userId": "[parameters('LocalFile_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LocalFile_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationFroSqlVISHNU",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationFroSqlVISHNU')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalsqlVishnu')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LocalsqlVishnu_connectionString')]",
					"userName": "[parameters('LocalsqlVishnu_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LocalsqlVishnu_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationFroSqlVISHNU",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationFroSqlVISHNU')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OData1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('OData1_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('OData1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OData1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPECC_Local')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SAPECC_Local_properties_typeProperties_clientId')]",
					"language": "",
					"sncMode": false,
					"userName": "[parameters('SAPECC_Local_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SAPECC_Local_password')]"
					},
					"server": "[parameters('SAPECC_Local_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAPECC_Local_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "IntegrationFroSqlVISHNU",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationFroSqlVISHNU')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapBw1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapBw",
				"typeProperties": {
					"server": "[parameters('SapBw1_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapBw1_properties_typeProperties_systemNumber')]",
					"clientId": "[parameters('SapBw1_properties_typeProperties_clientId')]",
					"userName": "[parameters('SapBw1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapBw1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationFroSqlVISHNU",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationFroSqlVISHNU')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapEcc1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapEcc",
				"typeProperties": {
					"url": "[parameters('SapEcc1_properties_typeProperties_url')]",
					"username": "[parameters('SapEcc1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapEcc1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapOpenHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapOpenHub",
				"typeProperties": {
					"clientId": "[parameters('SapOpenHub_properties_typeProperties_clientId')]",
					"userName": "[parameters('SapOpenHub_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapOpenHub_password')]"
					},
					"server": "[parameters('SapOpenHub_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapOpenHub_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "IntegrationFroSqlVISHNU",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationFroSqlVISHNU')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTable1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SapTable1_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('SapTable1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapTable1_password')]"
					},
					"server": "[parameters('SapTable1_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapTable1_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SlefHostIRVishnu",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SlefHostIRVishnu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTable2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SapTable2_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('SapTable2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapTable2_password')]"
					},
					"server": "[parameters('SapTable2_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapTable2_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SlefHostIRVishnu",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SlefHostIRVishnu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTable3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SapTable3_properties_typeProperties_clientId')]",
					"language": "",
					"sncMode": false,
					"userName": "[parameters('SapTable3_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapTable3_password')]"
					},
					"server": "[parameters('SapTable3_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapTable3_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SlefHostIRVishnu",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SlefHostIRVishnu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline4",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/testtrigger/blobs/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AnubhavIntegrationRunTime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationFroSqlVISHNU')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SlefHostIRVishnu')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}