{
	"name": "deltaOnMDX",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": " select format(max(createdate),'yyyyMMdd') as date from (\nselect \ncase when SUBSTRING(cdate,1,2)<=12 then convert(date,concat(DAY(cdate),'-',month(cdate),'-',YEAR(cdate)))\nwhen SUBSTRING(cdate,1,2)>12 then convert(date,concat(substring(cdate,7,4),substring(cdate,4,2),substring(cdate,1,2)))\nend as createdate\nfrom cubedata)z",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerTable1",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "cubedata",
							"SchemaName": "dbo"
						}
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SapBwSource",
						"query": {
							"value": "SELECT {[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]} ON COLUMNS ,\n NON EMPTY CROSSJOIN(CROSSJOIN(CROSSJOIN(CROSSJOIN([2CISOFSLSORD-CREATIONDATE].[LEVEL01].MEMBERS,[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].MEMBERS) \n,[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].MEMBERS) ,[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].MEMBERS) ,[2CIFICURRENCY].[LEVEL01].MEMBERS)  ON ROWS FROM \n   (SELECT\n    FROM [$2CISOFSLSORD]\n   where {[2CISOFSLSORD-CREATIONDATE].[@{activity('Lookup1').output.firstRow.date}]:[2CISOFSLSORD-CREATIONDATE].[00000000]})",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "SqlServerSink",
						"preCopyScript": "truncate table cubedatastg"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "[2CISOFSLSORD-CREATIONDATE].[LEVEL01].[MEMBER_CAPTION]",
									"type": "String"
								},
								"sink": {
									"name": "cdate",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "[2CNO9S2M07QVPA4R49SGKY73X0Z].[LEVEL01].[MEMBER_CAPTION]",
									"type": "String"
								},
								"sink": {
									"name": "c1",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "[2CRHXRRK4SFTWJX27KAKEEJJT6A].[LEVEL01].[MEMBER_CAPTION]",
									"type": "String"
								},
								"sink": {
									"name": "c2",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "[2CS15SOP7NPDH3WU2BJDTO2HP3N].[LEVEL01].[MEMBER_CAPTION]",
									"type": "String"
								},
								"sink": {
									"name": "c3",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "[2CIFICURRENCY].[LEVEL01].[MEMBER_CAPTION]",
									"type": "String"
								},
								"sink": {
									"name": "c4",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "[0MEASURES0000000000000009].[-TOTALNETAMOUNT0000000015]",
									"type": "Decimal"
								},
								"sink": {
									"name": "c5",
									"type": "Decimal"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SapBwCube1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SqlServerTable1",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "cubedatastg",
							"SchemaName": "dbo"
						}
					}
				]
			}
		],
		"annotations": [],
		"lastPublishTime": "2020-04-09T05:37:26Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}